# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  desc "Push a new release build to the App Store"
  lane :release do
    setup_ci
    
    app_store_connect_api_key(
      key_id: ENV['APPLE_KEY_ID'],
      issuer_id: ENV['APPLE_KEY_ISSUER_ID'],
      key_content: ENV['APPLE_KEY_CONTENT'],
      in_house: false # optional but may be required if using match/sigh
    )
    
    match(type: "appstore")
   
    cocoapods
    sh("sed -i '' 's/source=\"$(readlink \"${source}\")\"/source=\"$(readlink -f \"${source}\")\"/g' \"../Pods/Target Support Files/Pods-iosApp/Pods-iosApp-frameworks.sh\"")

    version_string = sh("grep -P -o '(?<=app-version-string = \").*(?=\")' libs.versions.toml")
    version_code = sh("grep -P -o '(?<=app-version-code = \").*(?=\")' libs.versions.toml")

    increment_version_number(xcodeproj: "iosApp.xcodeproj", version_number: version_string)
    increment_build_number(xcodeproj: "iosApp.xcodeproj", build_number: version_code)

    gradle(task: "linkPodReleaseFrameworkIosArm64")

    build_app(workspace: "iosApp.xcworkspace", scheme: "iosApp")
    upload_to_app_store(
      force: true
    )
  end
  
  lane :beta do
    setup_ci
    
    app_store_connect_api_key(
      key_id: ENV['APPLE_KEY_ID'],
      issuer_id: ENV['APPLE_KEY_ISSUER_ID'],
      key_content: ENV['APPLE_KEY_CONTENT'],
      in_house: false # optional but may be required if using match/sigh
    )
    
    match(type: "appstore")
   
    cocoapods
    sh("sed -i '' 's/source=\"$(readlink \"${source}\")\"/source=\"$(readlink -f \"${source}\")\"/g' \"../Pods/Target Support Files/Pods-iosApp/Pods-iosApp-frameworks.sh\"")

    version_string = sh("grep -o -e 'app-version-string = \".*\"' ../../libs.versions.toml | grep -o -e '\".*\"' | cut -d '\"' -f 2")
    version_code = sh("grep -o -e 'app-version-code = \".*\"' ../../libs.versions.toml | grep -o -e '\".*\"' | cut -d '\"' -f 2")

    increment_version_number(xcodeproj: "iosApp.xcodeproj", version_number: version_string)
    increment_build_number(xcodeproj: "iosApp.xcodeproj", build_number: version_code)

    gradle(task: "linkPodReleaseFrameworkIosArm64")

    build_app(workspace: "iosApp.xcworkspace", scheme: "iosApp")
    upload_to_testflight(skip_waiting_for_build_processing: true)
  end

  desc "Build IPA"
  lane :build do
    match(type: "appstore")
    cocoapods
    sh("sed -i '' 's/source=\"$(readlink \"${source}\")\"/source=\"$(readlink -f \"${source}\")\"/g' \"../Pods/Target Support Files/Pods-iosApp/Pods-iosApp-frameworks.sh\"")

    build_app(workspace: "iosApp.xcworkspace", scheme: "iosApp")
  end
end

